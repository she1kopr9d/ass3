services:
    nginx:
        image: nginx:stable
        ports:
        - "80:80"
        volumes:
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
        - fastapi-service
    fastapi-service:
        build: ./fastapi_service
        command: uvicorn main:app --host 0.0.0.0 --port 8000
        ports:
            - "8765:8000"
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        volumes:
            - ./fastapi_service:/app
            - ./fastapi_service/uploads:/app/uploads

    rabbitmq:
        image: rabbitmq:3-management
        ports:
        - "5672:5672"
        - "15672:15672"
        env_file:
            - .env
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            RABBITMQ_LOGS: "-"
            RABBITMQ_LOG_LEVEL: "warning"
    telegram-bot:
        build: ./telegram_bot_service
        command: python main.py
        env_file:
            - .env
        depends_on:
            rabbitmq:
                condition: service_healthy

    db:
        image: postgres:15
        env_file:
            - .env
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_LOGGING_COLLECTOR: "off"

volumes:
    postgres_data:
